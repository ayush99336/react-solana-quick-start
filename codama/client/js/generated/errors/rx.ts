/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from 'gill';
import { RX_PROGRAM_ADDRESS } from '../programs';

/** Unauthorized: Unauthorized */
export const RX_ERROR__UNAUTHORIZED = 0x1770; // 6000
/** NameTooLong: Name too long */
export const RX_ERROR__NAME_TOO_LONG = 0x1771; // 6001
/** UriTooLong: URI too long */
export const RX_ERROR__URI_TOO_LONG = 0x1772; // 6002
/** InvalidTierCreator: Invalid tier/creator relationship */
export const RX_ERROR__INVALID_TIER_CREATOR = 0x1773; // 6003
/** MathOverflow: Math overflow */
export const RX_ERROR__MATH_OVERFLOW = 0x1774; // 6004
/** TokenPaymentsNotSupported: SPL token payments are not supported in-contract for MVP */
export const RX_ERROR__TOKEN_PAYMENTS_NOT_SUPPORTED = 0x1775; // 6005
/** InvalidPayoutWallet: Payout wallet account does not match on-chain configuration */
export const RX_ERROR__INVALID_PAYOUT_WALLET = 0x1776; // 6006
/** NoScholarshipSlots: No scholarship slots remaining */
export const RX_ERROR__NO_SCHOLARSHIP_SLOTS = 0x1777; // 6007

export type RxError =
  | typeof RX_ERROR__INVALID_PAYOUT_WALLET
  | typeof RX_ERROR__INVALID_TIER_CREATOR
  | typeof RX_ERROR__MATH_OVERFLOW
  | typeof RX_ERROR__NAME_TOO_LONG
  | typeof RX_ERROR__NO_SCHOLARSHIP_SLOTS
  | typeof RX_ERROR__TOKEN_PAYMENTS_NOT_SUPPORTED
  | typeof RX_ERROR__UNAUTHORIZED
  | typeof RX_ERROR__URI_TOO_LONG;

let rxErrorMessages: Record<RxError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  rxErrorMessages = {
    [RX_ERROR__INVALID_PAYOUT_WALLET]: `Payout wallet account does not match on-chain configuration`,
    [RX_ERROR__INVALID_TIER_CREATOR]: `Invalid tier/creator relationship`,
    [RX_ERROR__MATH_OVERFLOW]: `Math overflow`,
    [RX_ERROR__NAME_TOO_LONG]: `Name too long`,
    [RX_ERROR__NO_SCHOLARSHIP_SLOTS]: `No scholarship slots remaining`,
    [RX_ERROR__TOKEN_PAYMENTS_NOT_SUPPORTED]: `SPL token payments are not supported in-contract for MVP`,
    [RX_ERROR__UNAUTHORIZED]: `Unauthorized`,
    [RX_ERROR__URI_TOO_LONG]: `URI too long`,
  };
}

export function getRxErrorMessage(code: RxError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (rxErrorMessages as Record<RxError, string>)[code];
  }

  return 'Error message not available in production bundles.';
}

export function isRxError<TProgramErrorCode extends RxError>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    RX_PROGRAM_ADDRESS,
    code
  );
}
